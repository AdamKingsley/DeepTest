{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/answer.service.ts","webpack:///./src/app/answer/answer.component.css","webpack:///./src/app/answer/answer.component.html","webpack:///./src/app/answer/answer.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/neuron.ts","webpack:///./src/app/neurons.chart.ts","webpack:///./src/app/neurons/neurons.component.css","webpack:///./src/app/neurons/neurons.component.html","webpack:///./src/app/neurons/neurons.component.ts","webpack:///./src/app/tag.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/internal/Observable\";\nimport { catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs/internal/observable/of\";\nimport { Sample } from \"./sample\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerService {\n\n  private sampleUrls = 'api/samples';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getSampleImages(): Observable<Sample[]> {\n    const samples = [\n      { id: 1, source: 'assets/images/mnist/mnist_test_3.png', thumbnail: 'assets/images/mnist/mnist_test_3.png' },\n      { id: 2, source: 'assets/images/mnist/mnist_test_10.png', thumbnail: 'assets/images/mnist/mnist_test_10.png' },\n      { id: 3, source: 'assets/images/mnist/mnist_test_13.png', thumbnail: 'assets/images/mnist/mnist_test_13.png' },\n      { id: 4, source: 'assets/images/mnist/mnist_test_25.png', thumbnail: 'assets/images/mnist/mnist_test_25.png' },\n      { id: 5, source: 'assets/images/mnist/mnist_test_28.png', thumbnail: 'assets/images/mnist/mnist_test_28.png' },\n      { id: 6, source: 'assets/images/mnist/mnist_test_55.png', thumbnail: 'assets/images/mnist/mnist_test_55.png' },\n      { id: 7, source: 'assets/images/mnist/mnist_test_69.png', thumbnail: 'assets/images/mnist/mnist_test_69.png' },\n      { id: 8, source: 'assets/images/mnist/mnist_test_71.png', thumbnail: 'assets/images/mnist/mnist_test_71.png' },\n      { id: 9, source: 'assets/images/mnist/mnist_test_101.png', thumbnail: 'assets/images/mnist/mnist_test_101.png' },\n      { id: 10, source: 'assets/images/mnist/mnist_test_126.png', thumbnail: 'assets/images/mnist/mnist_test_126.png' },\n      { id: 11, source: 'assets/images/mnist/mnist_test_136.png', thumbnail: 'assets/images/mnist/mnist_test_136.png' },\n      { id: 12, source: 'assets/images/mnist/mnist_test_148.png', thumbnail: 'assets/images/mnist/mnist_test_148.png' },\n      { id: 13, source: 'assets/images/mnist/mnist_test_157.png', thumbnail: 'assets/images/mnist/mnist_test_157.png' },\n      { id: 14, source: 'assets/images/mnist/mnist_test_183.png', thumbnail: 'assets/images/mnist/mnist_test_183.png' },\n      { id: 15, source: 'assets/images/mnist/mnist_test_188.png', thumbnail: 'assets/images/mnist/mnist_test_188.png' }\n    ];\n    // return this.http.get<Sample[]>(this.sampleUrls)\n    //   .pipe(\n    //     catchError(this.handleError('getSampleImages', []))\n    //   );\n\n    return of(samples);\n  }\n\n  getSampleModelData(): Observable<object> {\n    return this.http.get('assets/data/compare.json')\n      .pipe(\n        catchError(this.handleError('getSampleImages', []))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \".container-fluid {\\n  height: 100vh;\\n  background-color: lightgray;\\n}\\n\\n.left-panel {\\n  padding: 0 3px 0 0;\\n  height: 50vh;\\n  max-height: 50vh;\\n  box-sizing: border-box;\\n}\\n\\n.left-panel-content {\\n  background-color: white;\\n  height: 50vh;\\n  max-height: 50vh;\\n}\\n\\n.right-panel {\\n  padding: 0 0 0 3px;\\n  height: 50vh;\\n  max-height: 50vh;\\n  box-sizing: border-box;\\n}\\n\\n.right-panel-content {\\n  background-color: white;\\n  height: 50vh;\\n  max-height: 50vh;\\n}\\n\\n.card-title {\\n  font-size: 18px;\\n}\\n\\n.samples-wrapper {\\n  max-height: 40vh;\\n  overflow: scroll;\\n}\\n\\n.sample-wrapper {\\n  padding: 8px 8px;\\n  display: inline-block;\\n  cursor: pointer;\\n\\n  transition: background-color 0.5s;\\n  -moz-transition: background-color 0.5s; /* Firefox 4 */\\n  -webkit-transition: background-color 0.5s; /* Safari 和 Chrome */\\n  -o-transition: background-color 0.5s; /* Opera */\\n}\\n\\n.sample-wrapper.selected {\\n  background-color: #007bff;\\n}\\n\\n.sample-wrapper:hover {\\n  background: rgb(64, 75, 84);\\n  transition: background-color 0.5s;\\n  -moz-transition: background-color 0.5s; /* Firefox 4 */\\n  -webkit-transition: background-color 0.5s; /* Safari 和 Chrome */\\n  -o-transition: background-color 0.5s; /* Opera */\\n}\\n\\n.sample-wrapper img {\\n  width: 80px;\\n}\\n\\n.large-img {\\n  margin-top: 10px;\\n}\\n\\n.large-img img {\\n  width: 100%;\\n  max-width: 250px;\\n}\\n\\n#neuron-details {\\n  position: absolute;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  color: white;\\n  display: none;\\n  top: 100px;\\n  left: 100px;\\n  padding: 10px;\\n  z-index: 100;\\n  font-size: 12px;\\n}\\n\\n.fa-close {\\n  cursor: pointer;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3 left-panel\\\">\\n      <div class=\\\"left-panel-content card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\">\\n            未提交样本\\n            <span class=\\\"pull-right\\\">\\n              <button type=\\\"button\\\"\\n                      pButton\\n                      class=\\\"btn btn-sm btn-outline-primary\\\"\\n                      (click)=\\\"filterPanel.toggle($event)\\\">\\n                筛选\\n              </button>&nbsp;\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\"\\n                      (click)=\\\"submitSamples()\\\">\\n                提交\\n              </button>\\n            </span>\\n          </h4>\\n          <div class=\\\"card-content\\\">\\n            <span class=\\\"badge badge-success\\\" *ngIf=\\\"commonNeuronFilter.value\\\">\\n              共同激活神经元\\n              <i class=\\\"fa fa-close\\\" (click)=\\\"deleteCommonNeuronFilter()\\\"></i>\\n            </span>&nbsp;\\n            <span class=\\\"badge badge-success\\\" *ngIf=\\\"numFilter.value\\\">\\n              数字{{ numFilter.value }}\\n              <i class=\\\"fa fa-close\\\" (click)=\\\"deleteNumFilter()\\\"></i>\\n            </span>\\n          </div>\\n          <div class=\\\"samples-wrapper\\\">\\n            <div class=\\\"sample-wrapper\\\"\\n                 *ngFor=\\\"let sample of unuploadedSamples\\\"\\n                 [class.selected]=\\\"checkSelected(sample)\\\"\\n                 (click)=\\\"selectSample(sample)\\\"\\n                 (dblclick)=\\\"getUnuploadedSampleModelInfo(sample)\\\">\\n              <img src=\\\"{{ sample.source }}\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-9 right-panel\\\">\\n      <div class=\\\"right-panel-content card\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"card-body\\\">\\n              <h4 class=\\\"card-title\\\">\\n                神经元激活\\n                <p-toggleButton [(ngModel)]=\\\"enableUnuploadedMixView\\\"\\n                                offLabel=\\\"启用混合模式\\\"\\n                                onLabel=\\\"取消混合模式\\\"\\n                                [style]=\\\"{ 'font-size': '12px' }\\\"></p-toggleButton>\\n              </h4>\\n              <p-dropdown [options]=\\\"models\\\"\\n                          optionLabel=\\\"name\\\"\\n                          placeholder=\\\"选择查看的模型\\\"\\n                          [(ngModel)]=\\\"unuploadedSampleSelectedModel\\\"></p-dropdown>\\n              <div class=\\\"large-img\\\">\\n                <img *ngIf=\\\"dbSelectedUnuploadedSample\\\" [src]=\\\"dbSelectedUnuploadedSample.source\\\"/>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <app-neurons [standardData]=\\\"unuploadedSampleStandardData\\\"\\n                         [mutationData]=\\\"unuploadedSampleMutationData\\\"\\n                         [enableMixView]=\\\"enableUnuploadedMixView\\\"></app-neurons>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3 left-panel\\\">\\n      <div class=\\\"left-panel-content card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\">已提交样本</h4>\\n          <div class=\\\"samples-wrapper\\\">\\n            <div class=\\\"sample-wrapper\\\"\\n                 *ngFor=\\\"let sample of uploadedSamples\\\"\\n                 (dblclick)=\\\"getUploadedSampleModelInfo(sample)\\\">\\n              <img src=\\\"{{ sample.source }}\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-9 right-panel\\\">\\n      <div class=\\\"right-panel-content card\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\">\\n            <div class=\\\"card-body\\\">\\n              <h4 class=\\\"card-title\\\">\\n                神经元激活\\n                <p-toggleButton [(ngModel)]=\\\"enableUploadedMixView\\\"\\n                                offLabel=\\\"启用混合模式\\\"\\n                                onLabel=\\\"取消混合模式\\\"\\n                                [style]=\\\"{ 'font-size': '12px' }\\\"></p-toggleButton>\\n              </h4>\\n              <p-dropdown [options]=\\\"models\\\"\\n                          optionLabel=\\\"name\\\"\\n                          placeholder=\\\"选择查看的模型\\\"\\n                          [(ngModel)]=\\\"uploadedSampleSelectedModel\\\"></p-dropdown>\\n              <div class=\\\"large-img\\\">\\n                <img *ngIf=\\\"dbSelectedUploadedSample\\\" [src]=\\\"dbSelectedUploadedSample.source\\\"/>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-8\\\">\\n            <app-neurons [standardData]=\\\"uploadedSampleStandardData\\\"\\n                         [mutationData]=\\\"uploadedSampleMutationData\\\"\\n                         [enableMixView]=\\\"enableUploadedMixView\\\"></app-neurons>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <input id=\\\"neuron-selected\\\" type=\\\"hidden\\\"\\n         #neuronSelected\\n         (change)=\\\"getNeuronRelation(neuronSelected.value)\\\">\\n  <div id=\\\"neuron-details\\\">\\n  </div>\\n  <p-overlayPanel #filterPanel>\\n    <div>\\n      <label>按数字筛选: </label>&nbsp;\\n      <p-dropdown [options]=\\\"numModels\\\"\\n                  placeholder=\\\"选择一个数字\\\"\\n                  optionLabel=\\\"name\\\"\\n                  name=\\\"value\\\"\\n                  [showClear]=\\\"true\\\"\\n                  [style]=\\\"{ 'min-width': '50px' }\\\"\\n                  (onChange)=\\\"chooseNumFilter($event)\\\"></p-dropdown>\\n    </div>\\n  </p-overlayPanel>\\n  <p-growl [(value)]=\\\"msgs\\\"></p-growl>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AnswerService } from \"../answer.service\";\nimport { Sample } from \"../sample\";\nimport { Model } from \"../model\";\nimport { Tag } from \"../tag\";\nimport { Message } from \"primeng/api\";\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.css']\n})\nexport class AnswerComponent implements OnInit {\n\n  uploadedSamples: Sample[];\n  unuploadedSamples: Sample[];\n  selectedSamples: Sample[];\n  dbSelectedUploadedSample: Sample;\n  dbSelectedUnuploadedSample: Sample;\n\n  models: Model[];\n  uploadedSampleSelectedModel: Model;\n  unuploadedSampleSelectedModel: Model;\n\n  uploadedSampleStandardData: any[];\n  uploadedSampleMutationData: any[];\n  unuploadedSampleStandardData: any[];\n  unuploadedSampleMutationData: any[];\n\n  enableUploadedMixView: boolean;\n  enableUnuploadedMixView: boolean;\n\n  numFilter: Tag;\n  commonNeuronFilter: Tag;\n\n  numModels: Model[];\n\n  msgs: Message[] = [];\n\n  constructor(\n    private as: AnswerService,\n  ) {\n    this.unuploadedSamples = [];\n    this.uploadedSamples = [];\n    this.selectedSamples = [];\n    this.enableUploadedMixView = false;\n    this.enableUnuploadedMixView = false;\n    this.models = [{\n      id: 1,\n      name: 'model1',\n      code: 'model1'\n    }, {\n      id: 2,\n      name: 'model2',\n      code: 'model2'\n    }];\n\n    this.numFilter = new Tag('numFilter', '按数字筛选');\n    this.commonNeuronFilter = new Tag('commonNeuronFilter', '共同激活神经元');\n\n    this.numModels = [];\n    for (let i = 0; i <= 9; i++) {\n      this.numModels.push({\n        id: i,\n        name: '数字' + i,\n        code: i\n      });\n    }\n  }\n\n  ngOnInit() {\n    this.getUnselectedSamples();\n  }\n\n  getUnselectedSamples(): void {\n    this.as.getSampleImages()\n      .subscribe(res => {\n        // this.unuploadedSamples = res['data'];\n        this.unuploadedSamples = res;\n      });\n  }\n\n  getUploadedSampleModelInfo(sample: Sample): void {\n    this.dbSelectedUploadedSample = sample;\n\n    this.as.getSampleModelData()\n      .subscribe(res => {\n        console.log(res);\n        let data = res[parseInt(Math.random() * res['length'] + '')];\n        this.uploadedSampleStandardData = data['standard']['activation_data'];\n        this.uploadedSampleMutationData = data['mutation']['activation_data'];\n      });\n    // let data = [[0.0, 694.4541625976562, 576.5576171875, 0.0, 0.0, 0.0, 65.04790496826172, 48.080955505371094, 0.0, 0.0, 81.63490295410156, 0.0, 395.0830993652344, 0.0, 270.1715087890625, 259.2370300292969, 0.0, 405.19427490234375, 0.0, 0.0, 232.59967041015625, 0.0, 341.1324768066406, 23.478775024414062, 0.0, 468.7574768066406, 0.0, 289.6323547363281, 0.0, 360.555419921875, 420.4726867675781, 0.0, 0.0, 255.3807830810547, 168.64903259277344, 193.99569702148438, 399.9292907714844, 460.3389892578125, 100.61650085449219, 15.777307510375977, 0.0, 0.0, 0.0, 231.57615661621094, 0.0, 37.90004348754883, 265.57177734375, 329.5272521972656, 0.0, 323.53790283203125, 0.0, 0.0, 506.5129699707031, 69.03968048095703, 0.0, 302.987060546875, 13.249414443969727, 243.73585510253906, 0.0, 0.0, 16.11215591430664, 350.7455139160156, 100.34384155273438, 349.66241455078125, 0.0, 132.2751007080078, 91.3981704711914, 28.72543716430664, 521.1237182617188, 79.79865264892578, 108.68673706054688, 139.38821411132812, 51.974693298339844, 214.6057586669922, 42.286441802978516, 182.9475555419922, 110.07176208496094, 159.0723419189453, 0.0, 156.9267120361328, 84.56175231933594, 267.1103820800781, 665.5420532226562, 141.90472412109375, 260.51104736328125, 437.92059326171875, 440.8114929199219, 0.0, 0.0, 297.4335632324219, 0.0, 0.0, 0.0, 0.0, 16.467266082763672, 551.6189575195312, 52.31745910644531, 20.245100021362305, 0.0, 11.289498329162598, 431.0814208984375, 0.0, 103.31293487548828, 433.2301025390625, 0.0, 0.0, 0.0, 36.845943450927734, 88.62013244628906, 0.0, 0.0, 97.44087219238281, 351.683349609375, 322.2474365234375, 0.0, 0.0, 553.4690551757812, 0.0, 0.0, 530.68603515625, 285.1716613769531, 234.6432647705078, 0.0, 0.0, 8.436851501464844, 0.0, 0.0, 431.3189697265625], [72.97106170654297, 0.0, 437.5430603027344, 147.00340270996094, 0.0, 620.1451416015625, 0.0, 185.49937438964844, 109.87017822265625, 0.0, 305.3186340332031, 516.307373046875, 125.89264678955078, 0.0, 81.26470947265625, 665.7340698242188, 792.6072998046875, 0.0, 478.5935974121094, 0.0, 528.610107421875, 865.6567993164062, 0.0, 0.0, 0.0, 876.9360961914062, 11.017358779907227, 177.15724182128906, 752.98291015625, 907.34619140625, 0.0, 0.0, 1148.999755859375, 13.797208786010742, 364.32501220703125, 254.0125274658203, 574.5029296875, 196.9464569091797, 1280.511474609375, 416.93707275390625, 222.45790100097656, 0.0, 464.8917541503906, 0.0, 53.74929428100586, 77.836669921875, 916.1856689453125, 721.7022705078125, 758.886474609375, 1050.402587890625, 591.8943481445312, 276.8351745605469, 0.0, 0.0, 0.0, 557.6524658203125, 558.0093383789062, 610.9400634765625, 821.3233642578125, 0.0, 144.6666717529297, 213.65293884277344, 500.19647216796875, 127.33116149902344], [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]];\n    // this.uploadedSampleStandardData = data;\n    // this.uploadedSampleMutationData = data;\n  }\n\n  getUnuploadedSampleModelInfo(sample: Sample): void {\n    this.dbSelectedUnuploadedSample = sample;\n\n    this.as.getSampleModelData()\n      .subscribe(res => {\n        console.log(res);\n        let data = res[Math.trunc(Math.random() * res['length'])];\n        data['standard']['activation_data'].splice(2, 1);\n        data['mutation']['activation_data'].splice(2, 1);\n        this.unuploadedSampleStandardData = data['standard']['activation_data'];\n        this.unuploadedSampleMutationData = data['mutation']['activation_data'];\n      });\n    // let data = [[0.0, 694.4541625976562, 576.5576171875, 0.0, 0.0, 0.0, 65.04790496826172, 48.080955505371094, 0.0, 0.0, 81.63490295410156, 0.0, 395.0830993652344, 0.0, 270.1715087890625, 259.2370300292969, 0.0, 405.19427490234375, 0.0, 0.0, 232.59967041015625, 0.0, 341.1324768066406, 23.478775024414062, 0.0, 468.7574768066406, 0.0, 289.6323547363281, 0.0, 360.555419921875, 420.4726867675781, 0.0, 0.0, 255.3807830810547, 168.64903259277344, 193.99569702148438, 399.9292907714844, 460.3389892578125, 100.61650085449219, 15.777307510375977, 0.0, 0.0, 0.0, 231.57615661621094, 0.0, 37.90004348754883, 265.57177734375, 329.5272521972656, 0.0, 323.53790283203125, 0.0, 0.0, 506.5129699707031, 69.03968048095703, 0.0, 302.987060546875, 13.249414443969727, 243.73585510253906, 0.0, 0.0, 16.11215591430664, 350.7455139160156, 100.34384155273438, 349.66241455078125, 0.0, 132.2751007080078, 91.3981704711914, 28.72543716430664, 521.1237182617188, 79.79865264892578, 108.68673706054688, 139.38821411132812, 51.974693298339844, 214.6057586669922, 42.286441802978516, 182.9475555419922, 110.07176208496094, 159.0723419189453, 0.0, 156.9267120361328, 84.56175231933594, 267.1103820800781, 665.5420532226562, 141.90472412109375, 260.51104736328125, 437.92059326171875, 440.8114929199219, 0.0, 0.0, 297.4335632324219, 0.0, 0.0, 0.0, 0.0, 16.467266082763672, 551.6189575195312, 52.31745910644531, 20.245100021362305, 0.0, 11.289498329162598, 431.0814208984375, 0.0, 103.31293487548828, 433.2301025390625, 0.0, 0.0, 0.0, 36.845943450927734, 88.62013244628906, 0.0, 0.0, 97.44087219238281, 351.683349609375, 322.2474365234375, 0.0, 0.0, 553.4690551757812, 0.0, 0.0, 530.68603515625, 285.1716613769531, 234.6432647705078, 0.0, 0.0, 8.436851501464844, 0.0, 0.0, 431.3189697265625], [72.97106170654297, 0.0, 437.5430603027344, 147.00340270996094, 0.0, 620.1451416015625, 0.0, 185.49937438964844, 109.87017822265625, 0.0, 305.3186340332031, 516.307373046875, 125.89264678955078, 0.0, 81.26470947265625, 665.7340698242188, 792.6072998046875, 0.0, 478.5935974121094, 0.0, 528.610107421875, 865.6567993164062, 0.0, 0.0, 0.0, 876.9360961914062, 11.017358779907227, 177.15724182128906, 752.98291015625, 907.34619140625, 0.0, 0.0, 1148.999755859375, 13.797208786010742, 364.32501220703125, 254.0125274658203, 574.5029296875, 196.9464569091797, 1280.511474609375, 416.93707275390625, 222.45790100097656, 0.0, 464.8917541503906, 0.0, 53.74929428100586, 77.836669921875, 916.1856689453125, 721.7022705078125, 758.886474609375, 1050.402587890625, 591.8943481445312, 276.8351745605469, 0.0, 0.0, 0.0, 557.6524658203125, 558.0093383789062, 610.9400634765625, 821.3233642578125, 0.0, 144.6666717529297, 213.65293884277344, 500.19647216796875, 127.33116149902344]];\n    // this.unuploadedSampleStandardData = data;\n    // this.unuploadedSampleMutationData = data;\n  }\n\n  selectSample(sample: Sample): void {\n    let index = -1;\n    for (let i = 0; i < this.selectedSamples.length; i++) {\n      if (this.selectedSamples[i].id == sample.id) {\n        index = i;\n        break;\n      }\n    }\n    if (index == -1) {\n      this.selectedSamples.push(sample);\n    } else {\n      this.selectedSamples.splice(index, 1);\n    }\n    console.log(this.selectedSamples);\n  }\n\n  checkSelected(sample: Sample): boolean {\n    let index = -1;\n    for (let i = 0; i < this.selectedSamples.length; i++) {\n      if (this.selectedSamples[i].id == sample.id) {\n        index = i;\n        break;\n      }\n    }\n    return index != -1;\n  }\n\n  submitSamples(): void {\n    this.uploadedSamples = this.uploadedSamples.concat(this.selectedSamples);\n    for (let i = 0; i < this.selectedSamples.length; i++) {\n      for (let j = 0; j < this.unuploadedSamples.length; j++) {\n        if (this.unuploadedSamples[j].id === this.selectedSamples[i].id) {\n          this.unuploadedSamples.splice(j, 1);\n          break;\n        }\n      }\n    }\n    this.selectedSamples = [];\n  }\n\n  getNeuronRelation(value: string): void {\n    console.log(value);\n    let position = value.split(',').map(s => {\n      return parseInt(s);\n    });\n    if (!position) {\n      return;\n    }\n    let layer = position[0] + 1;\n    if (layer >= 3) {\n      this.showError('不支持查询第' + layer + '层的神经元！');\n      return;\n    }\n    this.commonNeuronFilter.value = value;\n  }\n\n  deleteCommonNeuronFilter(): void {\n    this.commonNeuronFilter.value = null;\n  }\n\n  deleteNumFilter(): void {\n    this.numFilter.value = null;\n  }\n\n  chooseNumFilter(event): void {\n    let model: Model = event.value;\n    this.numFilter.value = model.code;\n  }\n\n  showSuccess(msg) {\n    this.msgs = [];\n    this.msgs.push({severity:'success', summary:'Success Message', detail: msg});\n  }\n\n  showInfo(msg) {\n    this.msgs = [];\n    this.msgs.push({severity:'info', summary:'Info Message', detail: msg});\n  }\n\n  showWarn(msg) {\n    this.msgs = [];\n    this.msgs.push({severity:'warn', summary:'Warn Message', detail: msg});\n  }\n\n  showError(msg) {\n    this.msgs = [];\n    this.msgs.push({severity:'error', summary:'Error Message', detail: msg});\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AnswerComponent } from \"./answer/answer.component\";\n\nconst routes:Routes = [\n  { path: '', component: AnswerComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [\n    './app.component.css'\n  ]\n})\nexport class AppComponent {\n  title = '深度学习测试';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService }  from './in-memory-data.service';\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AnswerComponent } from './answer/answer.component';\n\nimport { DropdownModule } from \"primeng/primeng\";\nimport { ToggleButtonModule } from 'primeng/togglebutton';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { GrowlModule } from 'primeng/growl';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NeuronsComponent } from './neurons/neurons.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnswerComponent,\n    NeuronsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: true }\n    // ),\n    FormsModule,\n    DropdownModule,\n    ToggleButtonModule,\n    OverlayPanelModule,\n    GrowlModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Neuron {\n  position: number[];\n  value: number;\n}\n","import { Neuron } from \"./neuron\";\n\ndeclare var d3;\n\nexport class NeuronsChart {\n\n  margin = { top: 55, right: 5, bottom: 5, left: 55 };\n  r = 5;\n  neuronMaxNum = 16;\n  neuronGap = 15;\n  layerGap = 20;\n  modelGap = 20;\n\n  static delta = 0.000001;\n\n  types = ['未激活', '全激活', '仅变异模型激活', '仅标准模型激活'];\n  colors = ['#777', '#5fc', '#c63', '#c36'];\n  strokeColor = '#333';\n\n  target: HTMLElement;\n\n  constructor(target: HTMLElement) {\n    this.target = target;\n  }\n\n  render(standardData: number[][], mutationData: number[][]) {\n    console.log('start rendering');\n\n    let width = this.target.getBoundingClientRect().width;\n    let height = 500;\n\n    let space = width - this.neuronMaxNum * this.neuronGap * 2 - this.margin.left - this.margin.right;\n    this.modelGap = space > 0 ? space / 2 : this.modelGap;\n\n    d3.select(this.target)\n      .append('text')\n      .classed('title', true)\n      .attr('x', this.margin.left + this.neuronMaxNum * this.neuronGap / 2 - 24)\n      .attr('y', 25)\n      .attr('fill', 'black')\n      .attr('style', 'font-size: 12px')\n      .text('标准模型');\n\n    d3.select(this.target)\n      .append('text')\n      .classed('title', true)\n      .attr('x', this.margin.left + this.neuronMaxNum * this.neuronGap * 3 / 2 + this.modelGap - 24)\n      .attr('y', 25)\n      .attr('fill', 'black')\n      .attr('style', 'font-size: 12px')\n      .text('变异模型');\n\n    let formattedStandardData = NeuronsChart.dataFormat(standardData);\n    let formattedMutationData = NeuronsChart.dataFormat(mutationData);\n\n    let top:number = this.margin.top;\n    for (let index = 0; index < formattedStandardData.length; index++) {\n      d3.select(this.target)\n        .selectAll('circle .standard-layer' + index)\n        .data(formattedStandardData[index])\n        .enter()\n        .append('circle')\n        .classed('standard-layer' + index, true)\n        .attr('r', this.r)\n        .attr('style', 'cursor: pointer')\n        .attr('fill', d => {\n          if (Math.abs(d['value']) < NeuronsChart.delta) {\n            return this.colors[0];\n          } else {\n            return this.colors[1];\n          }\n        })\n        .attr('stroke', this.strokeColor)\n        .attr('transform', (d, i) => {\n          let offsetX = this.margin.left + (i % this.neuronMaxNum) * this.neuronGap;\n          let offsetY = top + Math.trunc(i / this.neuronMaxNum) * this.neuronGap;\n          return `translate(${offsetX}, ${offsetY})`;\n        })\n        .on('click', function(d: Neuron) {\n          let t:HTMLElement = document.getElementById('neuron-selected');\n          t['value'] = d.position;\n          let ev = document.createEvent('HTMLEvents');\n          ev.initEvent('change', false, true);\n          t.dispatchEvent(ev);\n        })\n        .on('mouseover', function(d:Neuron) {\n          let pos = d3.mouse(this);\n          let tip = document.getElementById('neuron-details');\n          let left = this.getBoundingClientRect().left + pos[0];\n          let top = this.getBoundingClientRect().top + pos[1];\n\n          tip.style.left = (left + 20) + 'px';\n          tip.style.top = (top + 20) + 'px';\n\n          tip.innerHTML = NeuronsChart.getDetails(d.value);\n\n          tip.style.display = 'block';\n        })\n        .on('mouseout', function() {\n          let tip = document.getElementById('neuron-details');\n          tip.style.display = 'none';\n        });\n      d3.select(this.target)\n        .selectAll('circle .mutation-layer' + index)\n        .data(formattedMutationData[index])\n        .enter()\n        .append('circle')\n        .classed('mutation-layer' + index, true)\n        .attr('r', this.r)\n        .attr('style', 'cursor: pointer')\n        .attr('fill', d => {\n          if (Math.abs(d['value']) < NeuronsChart.delta) {\n            return this.colors[0];\n          } else {\n            return this.colors[1];\n          }\n        })\n        .attr('stroke', this.strokeColor)\n        .attr('transform', (d, i) => {\n          let offsetX:number = this.margin.left + this.neuronMaxNum * this.neuronGap + this.modelGap + (i % this.neuronMaxNum) * this.neuronGap;\n          let offsetY:number = top + Math.trunc(i / this.neuronMaxNum) * this.neuronGap;\n          return `translate(${offsetX}, ${offsetY})`;\n        })\n        .on('click', function(d: Neuron) {\n          let t:HTMLElement = document.getElementById('neuron-selected');\n          t['value'] = d.position;\n          let ev = document.createEvent('HTMLEvents');\n          ev.initEvent('change', false, true);\n          t.dispatchEvent(ev);\n        })\n        .on('mouseover', function(d: Neuron) {\n          let pos = d3.mouse(this);\n          let tip = document.getElementById('neuron-details');\n          let left = this.getBoundingClientRect().left + pos[0];\n          let top = this.getBoundingClientRect().top + pos[1];\n\n          tip.style.left = (left + 20) + 'px';\n          tip.style.top = (top + 20) + 'px';\n\n          tip.innerHTML = NeuronsChart.getDetails(d.value);\n\n          tip.style.display = 'block';\n        })\n        .on('mouseout', function() {\n          let tip = document.getElementById('neuron-details');\n          tip.style.display = 'none';\n        });\n      d3.select(this.target)\n        .append('text')\n        .classed('layer-num', true)\n        .attr('x', 0)\n        .attr('y', top + Math.trunc(standardData[index].length / this.neuronMaxNum) * this.neuronGap / 2)\n        .attr('fill', 'black')\n        .attr('style', 'font-size: 12px')\n        .text('第' + (index + 1) +\"层\");\n\n      top += (Math.trunc(standardData[index].length / this.neuronMaxNum) * this.neuronGap) + this.layerGap;\n    }\n\n    this.target.style.height = top + 'px';\n  }\n\n  renderMix(standardData: number[][], mutationData: number[][]): void {\n    console.log('start rendering');\n\n    let width = this.target.getBoundingClientRect().width;\n    let height = 500;\n\n    let space = width - this.neuronMaxNum * this.neuronGap * 2 - this.margin.left - this.margin.right;\n    this.modelGap = space > 0 ? space / 2 : this.modelGap;\n\n    let mixData: number[][] = [];\n    let index = 0;\n\n    for (index = 0; index < standardData.length; index++) {\n      let layer = standardData[index];\n      let layerMix = [];\n      for (let index2 = 0; index2 < layer.length; index2++) {\n        let item = {\n          standardVal: standardData[index][index2],\n          mutationVal: mutationData[index][index2],\n          position: [index, index2]\n        };\n        layerMix.push(item);\n      }\n      mixData.push(layerMix);\n    }\n\n    d3.select(this.target)\n      .append('text')\n      .classed('title', true)\n      .attr('x', this.margin.left + this.neuronMaxNum * this.neuronGap / 2 - 24)\n      .attr('y', 25)\n      .attr('fill', 'black')\n      .attr('style', 'font-size: 12px')\n      .text('模型对比');\n\n    d3.select(this.target)\n      .selectAll('rect .legend')\n      .data(this.types)\n      .enter()\n      .append('rect')\n      .classed('legend', true)\n      .attr('fill', (d, i) => {\n        return this.colors[i];\n      })\n      .attr('x', this.margin.left + this.neuronMaxNum * this.neuronGap + 15)\n      .attr('y', (d, i) => {\n        return 16 + i * this.neuronGap;\n      })\n      .attr('width', this.r * 2)\n      .attr('height', this.r * 2)\n      .attr('stroke', this.strokeColor);\n\n    d3.select(this.target)\n      .selectAll('text .legend')\n      .data(this.types)\n      .enter()\n      .append('text')\n      .attr('x', this.margin.left + this.neuronMaxNum * this.neuronGap + 25 + this.r * 2 + 5)\n      .attr('y', (d, i) => {\n        return 25 + i * this.neuronGap;\n      })\n      .attr('fill', 'black')\n      .attr('style', 'font-size: 12px')\n      .text(d => {\n        return d;\n      });\n\n    let top:number = this.margin.top;\n    for (index = 0; index < mixData.length; index++) {\n      d3.select(this.target)\n        .selectAll('circle .standard-layer' + index)\n        .data(mixData[index])\n        .enter()\n        .append('circle')\n        .classed('standard-layer' + index, true)\n        .attr('r', this.r)\n        .attr('style', 'cursor: pointer')\n        .attr('fill', d => {\n          if (Math.abs(d['standardVal']) < NeuronsChart.delta && Math.abs(d['mutationVal']) < NeuronsChart.delta) {\n            return this.colors[0];\n          } else if (Math.abs(d['standardVal']) < NeuronsChart.delta && Math.abs(d['mutationVal']) >= NeuronsChart.delta) {\n            return this.colors[2];\n          } else if (Math.abs(d['standardVal']) >= NeuronsChart.delta && Math.abs(d['mutationVal']) < NeuronsChart.delta) {\n            return this.colors[3];\n          } else {\n            return this.colors[1];\n          }\n        })\n        .attr('stroke', '#333')\n        .attr('transform', (d, i) => {\n          let offsetX = this.margin.left + (i % this.neuronMaxNum) * this.neuronGap;\n          let offsetY = top + Math.trunc(i / this.neuronMaxNum) * this.neuronGap;\n          return `translate(${offsetX}, ${offsetY})`;\n        })\n        .on('click', function(d, i) {\n          let t:HTMLElement = document.getElementById('neuron-selected');\n          t['value'] = d['position'];\n          let ev = document.createEvent('HTMLEvents');\n          ev.initEvent('change', false, true);\n          t.dispatchEvent(ev);\n        })\n        .on('mouseover', function(d) {\n          let pos = d3.mouse(this);\n          let tip = document.getElementById('neuron-details');\n          let left = this.getBoundingClientRect().left + pos[0];\n          let top = this.getBoundingClientRect().top + pos[1];\n\n          tip.style.left = (left + 20) + 'px';\n          tip.style.top = (top + 20) + 'px';\n\n          tip.innerHTML = NeuronsChart.getDetailsMix(d['standardVal'], d['mutationVal']);\n\n          tip.style.display = 'block';\n        })\n        .on('mouseout', function() {\n          let tip = document.getElementById('neuron-details');\n          tip.style.display = 'none';\n        });\n      d3.select(this.target)\n        .append('text')\n        .classed('layer-num', true)\n        .attr('x', 0)\n        .attr('y', top + Math.trunc(standardData[index].length / this.neuronMaxNum) * this.neuronGap / 2)\n        .attr('fill', 'black')\n        .attr('style', 'font-size: 12px')\n        .text('第' + (index + 1) +\"层\");\n\n      top += (Math.trunc(standardData[index].length / this.neuronMaxNum) * this.neuronGap) + this.layerGap;\n    }\n\n    this.target.style.height = top + 'px';\n  }\n\n  destroy(): void {\n    d3.select(this.target)\n      .selectAll('circle')\n      .remove();\n    d3.select(this.target)\n      .selectAll('text')\n      .remove();\n    d3.select(this.target)\n      .selectAll('rect')\n      .remove();\n  }\n\n  private static getDetails(value): string {\n    let state;\n    if (Math.abs(value) < NeuronsChart.delta) {\n      state = '未激活';\n    } else {\n      state = '激活';\n    }\n    return `激活状态: ${state}<br/>激活值: ${value == 0 ? value : value.toFixed(6)}`;\n  }\n\n  private static getDetailsMix(standardValue, mutationValue): string {\n    return `标准模型激活值: ${standardValue == 0 ? standardValue : standardValue.toFixed(6)}\n      <br/>变异模型激活值: ${mutationValue == 0 ? mutationValue : mutationValue.toFixed(6)}`;\n  }\n\n  private static dataFormat(data: number[][]): Neuron[][] {\n    let formattedData = [];\n    for (let i = 0; i < data.length; i++) {\n      let layer = data[i];\n      let layerFormat = [];\n      for (let j = 0; j < layer.length; j++) {\n        let t = new Neuron();\n        t.position = [i, j];\n        t.value = data[i][j];\n        layerFormat.push(t);\n      }\n      formattedData.push(layerFormat);\n    }\n    return formattedData;\n  }\n\n}\n","module.exports = \".neurons-wrapper {\\n  max-height: 50vh;\\n  overflow: scroll;\\n}\\n\"","module.exports = \"<div #wrapper class=\\\"neurons-wrapper\\\">\\n  <svg #neurons></svg>\\n  <!--<svg #mutation></svg>-->\\n</div>\\n\"","import { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, ViewChild, ViewChildren } from '@angular/core';\nimport { ElementDef } from \"@angular/core/src/view\";\n\nimport { NeuronsChart } from \"../neurons.chart\";\n\n@Component({\n  selector: 'app-neurons',\n  templateUrl: './neurons.component.html',\n  styleUrls: ['./neurons.component.css']\n})\nexport class NeuronsComponent implements OnInit, AfterViewInit, OnChanges {\n\n  @ViewChild('wrapper') wrapper: ElementRef;\n  @ViewChild('neurons') standard: ElementRef;\n\n  neuronsSVG: HTMLElement;\n\n  @Input() standardData: any[];\n  @Input() mutationData: any[];\n  @Input() enableMixView: boolean;\n\n  neuronsChart: NeuronsChart;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(): void {\n    this.neuronsSVG = this.standard.nativeElement;\n    this.neuronsChart = new NeuronsChart(this.neuronsSVG);\n\n    let wrapperHTML: HTMLElement = this.wrapper.nativeElement;\n    this.neuronsSVG.style.width = (wrapperHTML.offsetWidth - 1) + 'px';\n  }\n\n  ngOnChanges(changes): void {\n    if (this.neuronsChart && this.standardData && this.mutationData) {\n      this.neuronsChart.destroy();\n      if (this.enableMixView) {\n        this.neuronsChart.renderMix(this.standardData, this.mutationData);\n      } else {\n        this.neuronsChart.render(this.standardData, this.mutationData);\n      }\n    }\n  }\n\n}\n","export class Tag {\n  name: string;\n  namei18N: string;\n  value: any;\n\n  constructor(name: string, namei18N: string) {\n    this.name = name;\n    this.namei18N = namei18N;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}